3/28/2021
To-Do List
    - Mining Reward
    - Central Authority Class
    - User Class
        - Registered users 
        - tracks email/id and SSN
        - Has wallet associated with it
    - Wallet Class/Structure
        - Public Private Key Pair 
        - Password ?(maybe)
        - Can be created anonymously
    - Optimize generate hash function by not storing the hash value
    - Alter method of rejection

What we did:
    - Verified all current classes work
    - Discussed implementation model of CA
    - Discussed general implementation(Wallet, keys, etc.)

Descisions Made:
    - CA registration is optional
    - CA will keep track of username and SSN 
    - Rejection of CA transaction using SSN or private key 

Next Meeting: 
    - Implement wallet structure
    - Implement new CA first
    - Implement new rejection
    - Test rejection

Next Meeting on weekday: Wednesday 1-4 PM, 03/31/2021


3/31/2021
To-do List:
    - Wallet Structure
    - Basic User class structure
    - New CA
    - New Rejection Method within queue
    - Test new rejection
    - Optimize generate hash function by not storing the hash value
    - Mining Reward
   

What we did:
    - Discussed a 'lost coin' distribution via mining Reward
        - Discussed 2 potential options: Distribution and Mining Reward Addition
    - Completed Wallet Structure
    - Completed Basic User Class Structure
    - Implemented CA
    - Tested the transactions
    - Created new rejection method and tested it

Descisions Made:
    - Decided to keep CA

Next Meeting: 
    - getAvailableCoins function, maybe in blockchain 
    - CA Public key in text file
    - CA has access to node at creation
    - Mining Reward
    - Consolidate and clean up Code
    - Generate test code

Next Meeting on Weekend: Sunday 1-4 PM, 04/04/2021

04/04/2021
To-Do List:
    - Mining Reward
    - getAvailableCoins function
    - CA access to node
    - CA public key public text file
    - Consolidate and clean up Code
    - Generate test code


What we did:
    - Added mining Reward
    - Added a get coins function
    - Verified that both work
    - Added NOT working reject insufficient funds function

Next Meeting:
    - Fix CA Sending Functionality, currently sends 1 coin
    - Fix reject for invalid funds
    - CA access to node
    - CA public key public text file
    - Consolidate and clean up Code
    - Generate test code

Next Meeting 07/04/2021 1pm-4pm

07/04/2021
To-Do List:
    - Fix/create funds rejection
    - Split into class files
    - CA Sending Functionality for all coins

What we did:
    - Reference of blockchain in node
    - Split/Organized files into seperate files
    - Fixed the rejection method for funds per block
    - Fixed the getFunds method
    - Reject <=0 transactions on Node
    - Tested Reject Method with many transactions
    - Good progress

Next Meeting:
    - Genesis block reward goes to right address
        - Maybe store a local wallet for us both
    - CA Sending Functionality for all coins
    - CA local file for public key
        - Stored on blockchain/intrinsic to the system
    
Next meeting on 11/04/2021 on Sunday at 1pm

12/04/2021, Monday(Sunday was skipped due to David feeling unwell)
To-do List:
    - Create new wallet when lost wallet
    - CA Key global
    - Reject Transaction Signature Handoff between Node and CA

What we did:
    - CAKey is a global variable
    - Blockchain and Node are also global variables
    - Discussed spending coins you don't have yet in a block
        e.g David has 10 coins and Alex has 0 Coins.
        David sends Alex 10 Coins and Alex sends David 5 coins.
        Alex's transaction will get denied because David's 
        transaction is not yet on the blockchain.
    - CA Sends ALL coins in ones wallet now
    - Added CA change wallet associated with SSN function
    - Fixed getAvailableCoins function to allow you to send yourself money 
      without crashing the economy(it will count + and - for money sent to yourself)
    - Fixed the adding of pending CA transactions to the ready transactions
    - Updated the Blockchain.verify() function to properly detect tampering

Next Meeting 
    - Prettify output for screenshots
    - Generate sufficiently large test case for screenshots
    - Cleanup code for submission